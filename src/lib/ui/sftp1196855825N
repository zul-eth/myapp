"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.remainingLabel = exports.fmtDate = exports.truncate = exports.statusBadgeClass = exports.statusLabel = exports.STATUS_OPTIONS = void 0;
exports.STATUS_OPTIONS = [
    'PENDING',
    'WAITING_PAYMENT',
    'UNDERPAID',
    'WAITING_CONFIRMATION',
    'CONFIRMED',
    'COMPLETED',
    'EXPIRED',
    'FAILED',
];
function statusLabel(s) {
    switch (s) {
        case 'PENDING': return 'Baru Dibuat';
        case 'WAITING_PAYMENT': return 'Menunggu Pembayaran';
        case 'UNDERPAID': return 'Kurang Bayar';
        case 'WAITING_CONFIRMATION': return 'Menunggu Konfirmasi';
        case 'CONFIRMED': return 'Terkonfirmasi';
        case 'COMPLETED': return 'Selesai';
        case 'EXPIRED': return 'Kadaluarsa';
        case 'FAILED': return 'Gagal';
        default: return s;
    }
}
exports.statusLabel = statusLabel;
function statusBadgeClass(s) {
    switch (s) {
        case 'COMPLETED':
            return 'bg-green-100 text-green-700';
        case 'CONFIRMED':
            return 'bg-emerald-100 text-emerald-700';
        case 'EXPIRED':
        case 'FAILED':
            return 'bg-red-100 text-red-700';
        case 'UNDERPAID':
            return 'bg-yellow-100 text-yellow-700';
        case 'WAITING_PAYMENT':
        case 'WAITING_CONFIRMATION':
            return 'bg-blue-100 text-blue-700';
        case 'PENDING':
        default:
            return 'bg-gray-100 text-gray-700';
    }
}
exports.statusBadgeClass = statusBadgeClass;
function truncate(s, len) {
    if (len === void 0) { len = 10; }
    if (!s)
        return '-';
    return s.length > len ? "".concat(s.slice(0, len), "\u2026") : s;
}
exports.truncate = truncate;
function fmtDate(iso) {
    if (!iso)
        return '-';
    var d = new Date(iso);
    return d.toLocaleString('id-ID');
}
exports.fmtDate = fmtDate;
function remainingLabel(expiresAt) {
    if (!expiresAt)
        return '-';
    var ms = new Date(expiresAt).getTime() - Date.now();
    if (ms <= 0)
        return 'Expired';
    var s = Math.floor(ms / 1000);
    var m = Math.floor(s / 60);
    var sec = s % 60;
    return "".concat(m, "m ").concat(sec, "s");
}
exports.remainingLabel = remainingLabel;
