"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.clientCancelOrder = exports.clientUpdatePayment = exports.clientGetOrderStatus = exports.clientGetOrderDetail = exports.clientCreateOrder = exports.adminDeleteOrder = exports.adminUpdateOrder = exports.adminCreateOrder = exports.adminGetOrders = void 0;
var adminBase = "/api/admin/orders";
var clientBase = "/api/client/orders";
var parseJSON = function (r) { return __awaiter(void 0, void 0, void 0, function () {
    var t;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, r.text()];
            case 1:
                t = _a.sent();
                try {
                    return [2 /*return*/, JSON.parse(t)];
                }
                catch (_b) {
                    return [2 /*return*/, { raw: t }];
                }
                return [2 /*return*/];
        }
    });
}); };
/* ---------------- ADMIN ---------------- */
var adminGetOrders = function (params) { return __awaiter(void 0, void 0, void 0, function () {
    var query, res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                query = new URLSearchParams();
                if (params === null || params === void 0 ? void 0 : params.status)
                    query.append("status", params.status);
                if (params === null || params === void 0 ? void 0 : params.search)
                    query.append("search", params.search);
                return [4 /*yield*/, fetch("".concat(adminBase, "?").concat(query.toString()), { cache: "no-store" })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Gagal mengambil orders"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.adminGetOrders = adminGetOrders;
var adminCreateOrder = function (data) { return __awaiter(void 0, void 0, void 0, function () {
    var res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, fetch(adminBase, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Gagal membuat order"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.adminCreateOrder = adminCreateOrder;
var adminUpdateOrder = function (id, data) { return __awaiter(void 0, void 0, void 0, function () {
    var res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, fetch("".concat(adminBase, "/").concat(id), {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Gagal mengupdate order"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.adminUpdateOrder = adminUpdateOrder;
var adminDeleteOrder = function (id) { return __awaiter(void 0, void 0, void 0, function () {
    var res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, fetch("".concat(adminBase, "/").concat(id), { method: "DELETE" })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Gagal menghapus order"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.adminDeleteOrder = adminDeleteOrder;
/* ---------------- CLIENT ---------------- */
var clientCreateOrder = function (data) { return __awaiter(void 0, void 0, void 0, function () {
    var res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, fetch(clientBase, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Gagal membuat order"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.clientCreateOrder = clientCreateOrder;
var clientGetOrderDetail = function (id) { return __awaiter(void 0, void 0, void 0, function () {
    var res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, fetch("".concat(clientBase, "/").concat(id), { cache: "no-store" })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Order tidak ditemukan"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.clientGetOrderDetail = clientGetOrderDetail;
var clientGetOrderStatus = function (id) { return __awaiter(void 0, void 0, void 0, function () {
    var res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, fetch("".concat(clientBase, "/").concat(id, "/status"), { cache: "no-store" })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Gagal mengambil status order"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.clientGetOrderStatus = clientGetOrderStatus;
var clientUpdatePayment = function (id, data) { return __awaiter(void 0, void 0, void 0, function () {
    var res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, fetch("".concat(clientBase, "/").concat(id, "/payment"), {
                    method: "PATCH",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Gagal memperbarui pembayaran"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.clientUpdatePayment = clientUpdatePayment;
var clientCancelOrder = function (id) { return __awaiter(void 0, void 0, void 0, function () {
    var res, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, fetch("/api/client/orders/".concat(id, "/status"), {
                    method: "PATCH",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ status: "FAILED" }),
                })];
            case 1:
                res = _b.sent();
                if (!!res.ok) return [3 /*break*/, 3];
                _a = Error.bind;
                return [4 /*yield*/, parseJSON(res)];
            case 2: throw new (_a.apply(Error, [void 0, (_b.sent()).error || "Gagal membatalkan order"]))();
            case 3: return [2 /*return*/, parseJSON(res)];
        }
    });
}); };
exports.clientCancelOrder = clientCancelOrder;
